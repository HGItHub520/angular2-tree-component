/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../lib/angular2-tree-component';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '../../lib/models/tree-dragged-element.model';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '../../lib/components/adhoc-component-factory.service';
import * as import8 from '@angular/core/src/linker/compiler';
class TreeModuleInjector extends import0.NgModuleInjector<import1.TreeModule> {
  _CommonModule_0:import2.CommonModule;
  _TreeModule_1:import1.TreeModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  __TreeDraggedElement_3:import4.TreeDraggedElement;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  get _TreeDraggedElement_3():import4.TreeDraggedElement {
    if ((this.__TreeDraggedElement_3 == null)) { (this.__TreeDraggedElement_3 = new import4.TreeDraggedElement()); }
    return this.__TreeDraggedElement_3;
  }
  createInternal():import1.TreeModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._TreeModule_1 = new import1.TreeModule();
    return this._TreeModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.TreeModule)) { return this._TreeModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    if ((token === import4.TreeDraggedElement)) { return this._TreeDraggedElement_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const TreeModuleNgFactory:import0.NgModuleFactory<import1.TreeModule> = new import0.NgModuleFactory(TreeModuleInjector,import1.TreeModule);
class DeprecatedTreeModuleInjector extends import0.NgModuleInjector<import1.DeprecatedTreeModule> {
  _CommonModule_0:import2.CommonModule;
  _TreeModule_1:import1.TreeModule;
  _DeprecatedTreeModule_2:import1.DeprecatedTreeModule;
  __NgLocalization_3:import3.NgLocaleLocalization;
  __TreeDraggedElement_4:import4.TreeDraggedElement;
  __AdHocComponentFactoryCreator_5:import7.AdHocComponentFactoryCreator;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import3.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  get _TreeDraggedElement_4():import4.TreeDraggedElement {
    if ((this.__TreeDraggedElement_4 == null)) { (this.__TreeDraggedElement_4 = new import4.TreeDraggedElement()); }
    return this.__TreeDraggedElement_4;
  }
  get _AdHocComponentFactoryCreator_5():import7.AdHocComponentFactoryCreator {
    if ((this.__AdHocComponentFactoryCreator_5 == null)) { (this.__AdHocComponentFactoryCreator_5 = new import7.AdHocComponentFactoryCreator(this.parent.get(import8.Compiler))); }
    return this.__AdHocComponentFactoryCreator_5;
  }
  createInternal():import1.DeprecatedTreeModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._TreeModule_1 = new import1.TreeModule();
    this._DeprecatedTreeModule_2 = new import1.DeprecatedTreeModule();
    return this._DeprecatedTreeModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.TreeModule)) { return this._TreeModule_1; }
    if ((token === import1.DeprecatedTreeModule)) { return this._DeprecatedTreeModule_2; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_3; }
    if ((token === import4.TreeDraggedElement)) { return this._TreeDraggedElement_4; }
    if ((token === import7.AdHocComponentFactoryCreator)) { return this._AdHocComponentFactoryCreator_5; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const DeprecatedTreeModuleNgFactory:import0.NgModuleFactory<import1.DeprecatedTreeModule> = new import0.NgModuleFactory(DeprecatedTreeModuleInjector,import1.DeprecatedTreeModule);