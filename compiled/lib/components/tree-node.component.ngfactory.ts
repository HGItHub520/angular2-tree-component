/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../lib/components/tree-node.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '../../../lib/components/tree-node-drop-slot.component';
import * as import11 from './tree-node-drop-slot.component.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '../../../lib/components/tree-node-expander.component';
import * as import15 from './tree-node-expander.component.ngfactory';
import * as import16 from '../directives/tree-drop.directive.ngfactory';
import * as import17 from '../directives/tree-drag.directive.ngfactory';
import * as import18 from '../../../lib/components/tree-node-content.component';
import * as import19 from './tree-node-content.component.ngfactory';
import * as import20 from '../../../lib/components/tree-node-children.component';
import * as import21 from './tree-node-children.component.ngfactory';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '../../../lib/models/tree-dragged-element.model';
import * as import24 from '@angular/common/src/directives/ng_if';
import * as import25 from '../../../lib/directives/tree-drop.directive';
import * as import26 from '../../../lib/directives/tree-drag.directive';
import * as import27 from '@angular/core/src/security';
import * as import28 from '../../node_modules/@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import29 from '@angular/common/src/directives/ng_template_outlet';
export class Wrapper_TreeNodeComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TreeNodeComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.TreeNodeComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_node(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.node = currValue;
      this._expr_0 = currValue;
    }
  }
  check_index(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.index = currValue;
      this._expr_1 = currValue;
    }
  }
  check_templates(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.templates = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TreeNodeComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TreeNodeComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TreeNodeComponent>;
  _TreeNodeComponent_0_3:Wrapper_TreeNodeComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TreeNodeComponent_Host0,renderType_TreeNodeComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'TreeNode',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TreeNodeComponent0(this.viewUtils,this,0,this._el_0);
    this._TreeNodeComponent_0_3 = new Wrapper_TreeNodeComponent(new import9.ElementRef(this._el_0));
    this.compView_0.create(this._TreeNodeComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TreeNodeComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TreeNodeComponent) && (0 === requestNodeIndex))) { return this._TreeNodeComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TreeNodeComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._TreeNodeComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TreeNodeComponentNgFactory:import8.ComponentFactory<import0.TreeNodeComponent> = new import8.ComponentFactory<import0.TreeNodeComponent>('TreeNode',View_TreeNodeComponent_Host0,import0.TreeNodeComponent);
const styles_TreeNodeComponent:any[] = [
  '.node-content-wrapper {\n      display: inline-block;\n      padding: 2px 5px;\n      border-radius: 2px;\n      transition: background-color .15s,box-shadow .15s;\n    }',
  '.node-wrapper {display: flex; align-items: flex-start;}',
  '.tree-node-active > .node-wrapper > .node-content-wrapper { background: #beebff }',
  '.tree-node-active.tree-node-focused > .node-wrapper > .node-content-wrapper { background: #beebff }',
  '.tree-node-focused > .node-wrapper > .node-content-wrapper { background: #e7f4f9 }',
  '.node-content-wrapper:hover { background: #f7fbff }',
  '.tree-node-active > .node-wrapper > .node-content-wrapper, .tree-node-focused > .node-content-wrapper, .node-content-wrapper:hover { box-shadow: inset 0 0 1px #999; }',
  '.node-content-wrapper.is-dragging-over { background: #ddffee; box-shadow: inset 0 0 1px #999; }',
  '.node-content-wrapper.is-dragging-over-disabled { opacity: 0.5 }'
]
;
class View_TreeNodeComponent2 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import10.TreeNodeDropSlot>;
  _TreeNodeDropSlot_0_3:import11.Wrapper_TreeNodeDropSlot;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_TreeNodeComponent2,renderType_TreeNodeComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'TreeNodeDropSlot',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import11.View_TreeNodeDropSlot0(this.viewUtils,this,0,this._el_0);
    this._TreeNodeDropSlot_0_3 = new import11.Wrapper_TreeNodeDropSlot();
    this.compView_0.create(this._TreeNodeDropSlot_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.TreeNodeDropSlot) && (0 === requestNodeIndex))) { return this._TreeNodeDropSlot_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.node.parent;
    this._TreeNodeDropSlot_0_3.check_node(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.context.index;
    this._TreeNodeDropSlot_0_3.check_dropIndex(currVal_0_0_1,throwOnChange,false);
    this._TreeNodeDropSlot_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_TreeNodeComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import12.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import13.Wrapper_NgIf;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  compView_6:import2.AppView<import14.TreeNodeExpanderComponent>;
  _TreeNodeExpanderComponent_6_3:import15.Wrapper_TreeNodeExpanderComponent;
  _text_7:any;
  _el_8:any;
  _TreeDropDirective_8_3:import16.Wrapper_TreeDropDirective;
  _TreeDragDirective_8_4:import17.Wrapper_TreeDragDirective;
  _text_9:any;
  _el_10:any;
  compView_10:import2.AppView<import18.TreeNodeContent>;
  _TreeNodeContent_10_3:import19.Wrapper_TreeNodeContent;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  compView_15:import2.AppView<import20.TreeNodeChildrenComponent>;
  _TreeNodeChildrenComponent_15_3:import21.Wrapper_TreeNodeChildrenComponent;
  _text_16:any;
  _el_17:any;
  compView_17:import2.AppView<import10.TreeNodeDropSlot>;
  _TreeNodeDropSlot_17_3:import11.Wrapper_TreeNodeDropSlot;
  _text_18:any;
  /*private*/ _expr_32:any;
  /*private*/ _expr_33:any;
  /*private*/ _expr_34:any;
  /*private*/ _expr_35:any;
  /*private*/ _expr_36:any;
  /*private*/ _expr_37:any;
  /*private*/ _expr_38:any;
  /*private*/ _expr_39:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_TreeNodeComponent1,renderType_TreeNodeComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_32 = import1.UNINITIALIZED;
    this._expr_33 = import1.UNINITIALIZED;
    this._expr_34 = import1.UNINITIALIZED;
    this._expr_35 = import1.UNINITIALIZED;
    this._expr_36 = import1.UNINITIALIZED;
    this._expr_37 = import1.UNINITIALIZED;
    this._expr_38 = import1.UNINITIALIZED;
    this._expr_39 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n\n      ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import12.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import22.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import13.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','node-wrapper'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n          ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'TreeNodeExpander',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_6 = new import15.View_TreeNodeExpanderComponent0(this.viewUtils,this,6,this._el_6);
    this._TreeNodeExpanderComponent_6_3 = new import15.Wrapper_TreeNodeExpanderComponent();
    this.compView_6.create(this._TreeNodeExpanderComponent_6_3.context);
    this._text_7 = this.renderer.createText(this._el_4,'\n          ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'class','node-content-wrapper'),(null as any));
    this._TreeDropDirective_8_3 = new import16.Wrapper_TreeDropDirective(new import9.ElementRef(this._el_8),this.renderer,this.parentView.injectorGet(import23.TreeDraggedElement,this.parentIndex));
    this._TreeDragDirective_8_4 = new import17.Wrapper_TreeDragDirective(new import9.ElementRef(this._el_8),this.renderer,this.parentView.injectorGet(import23.TreeDraggedElement,this.parentIndex));
    this._text_9 = this.renderer.createText(this._el_8,'\n\n            ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'TreeNodeContent',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_10 = new import19.View_TreeNodeContent0(this.viewUtils,this,10,this._el_10);
    this._TreeNodeContent_10_3 = new import19.Wrapper_TreeNodeContent();
    this._text_11 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_10.create(this._TreeNodeContent_10_3.context);
    this._text_12 = this.renderer.createText(this._el_8,'\n          ',(null as any));
    this._text_13 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n\n      ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_0,'TreeNodeChildren',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_15 = new import21.View_TreeNodeChildrenComponent0(this.viewUtils,this,15,this._el_15);
    this._TreeNodeChildrenComponent_15_3 = new import21.Wrapper_TreeNodeChildrenComponent();
    this.compView_15.create(this._TreeNodeChildrenComponent_15_3.context);
    this._text_16 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_0,'TreeNodeDropSlot',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_17 = new import11.View_TreeNodeDropSlot0(this.viewUtils,this,17,this._el_17);
    this._TreeNodeDropSlot_17_3 = new import11.Wrapper_TreeNodeDropSlot();
    this.compView_17.create(this._TreeNodeDropSlot_17_3.context);
    this._text_18 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArrayDynamic(18,'click',(null as any),'dblclick',(null as any),'contextmenu',(null as any),'treeDrop',(null as any),'dragover',(null as any),'dragleave',(null as any),'drop',(null as any),'dragstart',(null as any),'dragend',(null as any)),this.eventHandler(this.handleEvent_8));
    this._TreeDropDirective_8_3.subscribe(this,this.eventHandler(this.handleEvent_8),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import24.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import14.TreeNodeExpanderComponent) && (6 === requestNodeIndex))) { return this._TreeNodeExpanderComponent_6_3.context; }
    if (((token === import18.TreeNodeContent) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._TreeNodeContent_10_3.context; }
    if (((token === import25.TreeDropDirective) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._TreeDropDirective_8_3.context; }
    if (((token === import26.TreeDragDirective) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._TreeDragDirective_8_4.context; }
    if (((token === import20.TreeNodeChildrenComponent) && (15 === requestNodeIndex))) { return this._TreeNodeChildrenComponent_15_3.context; }
    if (((token === import10.TreeNodeDropSlot) && (17 === requestNodeIndex))) { return this._TreeNodeDropSlot_17_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = (this.parentView.context.index === 0);
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_6_0_0:any = this.parentView.context.node;
    this._TreeNodeExpanderComponent_6_3.check_node(currVal_6_0_0,throwOnChange,false);
    this._TreeNodeExpanderComponent_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_8_0_0:any = this.parentView.context.node.allowDrop;
    this._TreeDropDirective_8_3.check_treeAllowDrop(currVal_8_0_0,throwOnChange,false);
    this._TreeDropDirective_8_3.ngDoCheck(this,this._el_8,throwOnChange);
    const currVal_8_1_0:any = this.parentView.context.node;
    this._TreeDragDirective_8_4.check_draggedElement(currVal_8_1_0,throwOnChange,false);
    const currVal_8_1_1:any = this.parentView.context.node.allowDrag();
    this._TreeDragDirective_8_4.check_treeDragEnabled(currVal_8_1_1,throwOnChange,false);
    this._TreeDragDirective_8_4.ngDoCheck(this,this._el_8,throwOnChange);
    const currVal_10_0_0:any = this.parentView.context.node;
    this._TreeNodeContent_10_3.check_node(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = this.parentView.context.index;
    this._TreeNodeContent_10_3.check_index(currVal_10_0_1,throwOnChange,false);
    const currVal_10_0_2:any = this.parentView.context.templates.treeNodeTemplate;
    this._TreeNodeContent_10_3.check_template(currVal_10_0_2,throwOnChange,false);
    this._TreeNodeContent_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_15_0_0:any = this.parentView.context.node;
    this._TreeNodeChildrenComponent_15_3.check_node(currVal_15_0_0,throwOnChange,false);
    const currVal_15_0_1:any = this.parentView.context.templates;
    this._TreeNodeChildrenComponent_15_3.check_templates(currVal_15_0_1,throwOnChange,false);
    this._TreeNodeChildrenComponent_15_3.ngDoCheck(this,this._el_15,throwOnChange);
    const currVal_17_0_0:any = this.parentView.context.node.parent;
    this._TreeNodeDropSlot_17_3.check_node(currVal_17_0_0,throwOnChange,false);
    const currVal_17_0_1:any = (this.parentView.context.index + 1);
    this._TreeNodeDropSlot_17_3.check_dropIndex(currVal_17_0_1,throwOnChange,false);
    this._TreeNodeDropSlot_17_3.ngDoCheck(this,this._el_17,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    const currVal_32:any = import3.inlineInterpolate(1,'tree-node tree-node-level-',this.parentView.context.node.level,'');
    if (import3.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_32);
      this._expr_32 = currVal_32;
    }
    const currVal_33:any = this.parentView.context.node.getClass();
    if (import3.checkBinding(throwOnChange,this._expr_33,currVal_33)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_33);
      this._expr_33 = currVal_33;
    }
    const currVal_34:any = (this.parentView.context.node.isExpanded && this.parentView.context.node.hasChildren);
    if (import3.checkBinding(throwOnChange,this._expr_34,currVal_34)) {
      this.renderer.setElementClass(this._el_0,'tree-node-expanded',currVal_34);
      this._expr_34 = currVal_34;
    }
    const currVal_35:any = (this.parentView.context.node.isCollapsed && this.parentView.context.node.hasChildren);
    if (import3.checkBinding(throwOnChange,this._expr_35,currVal_35)) {
      this.renderer.setElementClass(this._el_0,'tree-node-collapsed',currVal_35);
      this._expr_35 = currVal_35;
    }
    const currVal_36:any = this.parentView.context.node.isLeaf;
    if (import3.checkBinding(throwOnChange,this._expr_36,currVal_36)) {
      this.renderer.setElementClass(this._el_0,'tree-node-leaf',currVal_36);
      this._expr_36 = currVal_36;
    }
    const currVal_37:any = this.parentView.context.node.isActive;
    if (import3.checkBinding(throwOnChange,this._expr_37,currVal_37)) {
      this.renderer.setElementClass(this._el_0,'tree-node-active',currVal_37);
      this._expr_37 = currVal_37;
    }
    const currVal_38:any = this.parentView.context.node.isFocused;
    if (import3.checkBinding(throwOnChange,this._expr_38,currVal_38)) {
      this.renderer.setElementClass(this._el_0,'tree-node-focused',currVal_38);
      this._expr_38 = currVal_38;
    }
    const currVal_39:any = this.parentView.context.node.getNodePadding();
    if (import3.checkBinding(throwOnChange,this._expr_39,currVal_39)) {
      this.renderer.setElementStyle(this._el_4,'padding-left',((this.viewUtils.sanitizer.sanitize(import27.SecurityContext.STYLE,currVal_39) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import27.SecurityContext.STYLE,currVal_39).toString()));
      this._expr_39 = currVal_39;
    }
    this.compView_6.internalDetectChanges(throwOnChange);
    this.compView_10.internalDetectChanges(throwOnChange);
    this.compView_15.internalDetectChanges(throwOnChange);
    this.compView_17.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this.compView_6.destroy();
    this.compView_10.destroy();
    this.compView_15.destroy();
    this.compView_17.destroy();
    this._TreeDropDirective_8_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_TreeNodeComponent2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._TreeDropDirective_8_3.handleEvent(eventName,$event) && result);
    result = (this._TreeDragDirective_8_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.node.mouseAction('click',$event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'dblclick')) {
      const pd_sub_1:any = ((<any>this.parentView.context.node.mouseAction('dblClick',$event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'contextmenu')) {
      const pd_sub_2:any = ((<any>this.parentView.context.node.mouseAction('contextMenu',$event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'treeDrop')) {
      const pd_sub_3:any = ((<any>this.parentView.context.node.onDrop($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
class View_TreeNodeComponent3 extends import2.AppView<any> {
  _text_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_TreeNodeComponent3,renderType_TreeNodeComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._text_0 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.init(this._text_0,((<any>this.renderer).directRenderer? (null as any): [this._text_0]),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._text_0,ctx);
  }
}
var renderType_TreeNodeComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_TreeNodeComponent,{});
export class View_TreeNodeComponent0 extends import2.AppView<import0.TreeNodeComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import12.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import13.Wrapper_NgIf;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import12.ViewContainer;
  _TemplateRef_3_5:any;
  _NgTemplateOutlet_3_6:import28.Wrapper_NgTemplateOutlet;
  _map_10:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TreeNodeComponent0,renderType_TreeNodeComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._map_10 = import3.pureProxy4((p0:any,p1:any,p2:any,p3:any):{[key: string]:any} => {
      return {
        $implicit: p0,
        node: p1,
        index: p2,
        templates: p3
      }
      ;
    });
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_1 = new import12.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import22.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import13.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_3 = new import12.ViewContainer(3,(null as any),this,this._anchor_3);
    this._TemplateRef_3_5 = new import22.TemplateRef_(this,3,this._anchor_3);
    this._NgTemplateOutlet_3_6 = new import28.Wrapper_NgTemplateOutlet(this._vc_3.vcRef);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2,
      this._anchor_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import22.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import24.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    if (((token === import22.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import29.NgTemplateOutlet) && (3 === requestNodeIndex))) { return this._NgTemplateOutlet_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:boolean = (!this.context.node.isHidden && !this.context.templates.treeNodeFullTemplate);
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    const currVal_3_0_0:any = this._map_10(this.context.node,this.context.node,this.context.index,this.context.templates);
    this._NgTemplateOutlet_3_6.check_ngOutletContext(currVal_3_0_0,throwOnChange,false);
    const currVal_3_0_1:any = this.context.templates.treeNodeFullTemplate;
    this._NgTemplateOutlet_3_6.check_ngTemplateOutlet(currVal_3_0_1,throwOnChange,false);
    this._NgTemplateOutlet_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_TreeNodeComponent1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 3)) { return new View_TreeNodeComponent3(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}